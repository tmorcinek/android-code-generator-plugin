//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.09.04 at 11:40:23 AM BST 
//


package com.morcinek.android.codegenerator.serialization;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.morcinek.android.codegenerator.serialization package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.morcinek.android.codegenerator.serialization
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Method }
     * 
     */
    public Method createMethod() {
        return new Method();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link Type.Require }
     * 
     */
    public Type.Require createTypeRequire() {
        return new Type.Require();
    }

    /**
     * Create an instance of {@link Types }
     * 
     */
    public Types createTypes() {
        return new Types();
    }

    /**
     * Create an instance of {@link Method.Parameter }
     * 
     */
    public Method.Parameter createMethodParameter() {
        return new Method.Parameter();
    }

    /**
     * Create an instance of {@link Type.Implements }
     * 
     */
    public Type.Implements createTypeImplements() {
        return new Type.Implements();
    }

    /**
     * Create an instance of {@link Type.Require.Listener }
     * 
     */
    public Type.Require.Listener createTypeRequireListener() {
        return new Type.Require.Listener();
    }

}
